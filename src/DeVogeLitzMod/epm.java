/*      Copyright 2016 Arizona Board of regents on behalf of
 *                  The University of Arizona
 *                     All Rights Reserved
 *         (USE & RESTRICTION - Please read COPYRIGHT file)
 *
 *  Version    : DEVSJAVA 2.7
 *  Date       : 11-12-2016
 *  Authors	   : Scott DeVoge and Scott Litz
 */

package DeVogeLitzMod;

import java.awt.*;

import GenCol.*;


import model.modeling.*;
import model.simulation.*;

import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;
import view.simView.*;

public class epm extends ViewableDigraph{

	public epm(){
	    super("epm");
	
	    ViewableDigraph g = new generatorCoupledModel("generatorCoupledModel", 30);
	    ViewableDigraph p = new processorCoupledModel("processorCoupledModel", 10);
	    ViewableAtomic m = new systemMonitor("systemMonitor", 100);
	
	    add(g);
	    add(p);
	    add(m);
	
	    addInport("in");
	    addInport("x");
	    addInport("start");
	    addInport("stop");
	    addOutport("out");
	    addOutport("result");
	
	    addCoupling(this, "in", g, "in");
	    addCoupling(this, "x", g, "x");
	    addCoupling(this, "start", g, "start");	    
	    addCoupling(this, "stop", g, "stop");
	    
	    addCoupling(g, "out", p, "in");	    
	    addCoupling(p, "out", m, "in");
	    addCoupling(m, "out", g, "stop");
	    
	    addCoupling(p, "out", this, "out");
	    addCoupling(m, "capacity", this, "result");
	    addCoupling(m, "utilization", this, "result");
	    
	    addTestInput("in", new entity("start"));
	    addTestInput("x", new Pair(new entity("new connections"), new entity("1000")));
	    addTestInput("x", new Pair(new entity("system configuration"), new entity("advanced")));
	    addTestInput("x", new Pair(new entity("network latency"), new entity("medium")));
	}
    
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
	public void layoutForSimView()
    {
        preferredSize = new Dimension(900, 480);
        ((ViewableComponent)withName("systemMonitor")).setPreferredLocation(new Point(0, 290));
        ((ViewableComponent)withName("processorCoupledModel")).setPreferredLocation(new Point(278, 260));
        ((ViewableComponent)withName("generatorCoupledModel")).setPreferredLocation(new Point(20, 40));
    }
}

